// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/nginxinc/kubernetes-ingress/pkg/apis/configuration/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// TransportServerLister helps list TransportServers.
// All objects returned here must be treated as read-only.
type TransportServerLister interface {
	// List lists all TransportServers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TransportServer, err error)
	// TransportServers returns an object that can list and get TransportServers.
	TransportServers(namespace string) TransportServerNamespaceLister
	TransportServerListerExpansion
}

// transportServerLister implements the TransportServerLister interface.
type transportServerLister struct {
	indexer cache.Indexer
}

// NewTransportServerLister returns a new TransportServerLister.
func NewTransportServerLister(indexer cache.Indexer) TransportServerLister {
	return &transportServerLister{indexer: indexer}
}

// List lists all TransportServers in the indexer.
func (s *transportServerLister) List(selector labels.Selector) (ret []*v1alpha1.TransportServer, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransportServer))
	})
	return ret, err
}

// TransportServers returns an object that can list and get TransportServers.
func (s *transportServerLister) TransportServers(namespace string) TransportServerNamespaceLister {
	return transportServerNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// TransportServerNamespaceLister helps list and get TransportServers.
// All objects returned here must be treated as read-only.
type TransportServerNamespaceLister interface {
	// List lists all TransportServers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.TransportServer, err error)
	// Get retrieves the TransportServer from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.TransportServer, error)
	TransportServerNamespaceListerExpansion
}

// transportServerNamespaceLister implements the TransportServerNamespaceLister
// interface.
type transportServerNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all TransportServers in the indexer for a given namespace.
func (s transportServerNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.TransportServer, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.TransportServer))
	})
	return ret, err
}

// Get retrieves the TransportServer from the indexer for a given namespace and name.
func (s transportServerNamespaceLister) Get(name string) (*v1alpha1.TransportServer, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("transportserver"), name)
	}
	return obj.(*v1alpha1.TransportServer), nil
}
