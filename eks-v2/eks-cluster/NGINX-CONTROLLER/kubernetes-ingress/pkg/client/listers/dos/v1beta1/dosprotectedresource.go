// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/nginxinc/kubernetes-ingress/pkg/apis/dos/v1beta1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DosProtectedResourceLister helps list DosProtectedResources.
// All objects returned here must be treated as read-only.
type DosProtectedResourceLister interface {
	// List lists all DosProtectedResources in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.DosProtectedResource, err error)
	// DosProtectedResources returns an object that can list and get DosProtectedResources.
	DosProtectedResources(namespace string) DosProtectedResourceNamespaceLister
	DosProtectedResourceListerExpansion
}

// dosProtectedResourceLister implements the DosProtectedResourceLister interface.
type dosProtectedResourceLister struct {
	indexer cache.Indexer
}

// NewDosProtectedResourceLister returns a new DosProtectedResourceLister.
func NewDosProtectedResourceLister(indexer cache.Indexer) DosProtectedResourceLister {
	return &dosProtectedResourceLister{indexer: indexer}
}

// List lists all DosProtectedResources in the indexer.
func (s *dosProtectedResourceLister) List(selector labels.Selector) (ret []*v1beta1.DosProtectedResource, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.DosProtectedResource))
	})
	return ret, err
}

// DosProtectedResources returns an object that can list and get DosProtectedResources.
func (s *dosProtectedResourceLister) DosProtectedResources(namespace string) DosProtectedResourceNamespaceLister {
	return dosProtectedResourceNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DosProtectedResourceNamespaceLister helps list and get DosProtectedResources.
// All objects returned here must be treated as read-only.
type DosProtectedResourceNamespaceLister interface {
	// List lists all DosProtectedResources in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.DosProtectedResource, err error)
	// Get retrieves the DosProtectedResource from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.DosProtectedResource, error)
	DosProtectedResourceNamespaceListerExpansion
}

// dosProtectedResourceNamespaceLister implements the DosProtectedResourceNamespaceLister
// interface.
type dosProtectedResourceNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DosProtectedResources in the indexer for a given namespace.
func (s dosProtectedResourceNamespaceLister) List(selector labels.Selector) (ret []*v1beta1.DosProtectedResource, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta1.DosProtectedResource))
	})
	return ret, err
}

// Get retrieves the DosProtectedResource from the indexer for a given namespace and name.
func (s dosProtectedResourceNamespaceLister) Get(name string) (*v1beta1.DosProtectedResource, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta1.Resource("dosprotectedresource"), name)
	}
	return obj.(*v1beta1.DosProtectedResource), nil
}
